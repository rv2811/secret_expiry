name: Terraform CI/CD Workflow

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

permissions:
  actions: read
  contents: read
  id-token: write
  pull-requests: write
  security-events: write

env:
  ARM_RESOURCE_PROVIDER_REGISTRATIONS: all
  TF_IN_AUTOMATION: true

jobs:
  terraform-pipeline:
    name: Terraform Pipeline
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          github_token: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Init TFLint
        run: tflint --init
        working-directory: ${{ github.workspace }}

      - name: Run TFLint
        run: tflint -f compact
        working-directory: ${{ github.workspace }}
        continue-on-error: true

      - name: Run Tfsec Security Scan
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ${{ github.workspace }}
          soft_fail: true

      - name: Run Checkov Scan
        uses: bridgecrewio/checkov-action@master
        with:
          framework: terraform
        continue-on-error: true

      - name: Azure CLI Setup
        run: |
          az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p=${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
          az account set -s ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: terraform init -input=false -backend-config="access_key=${{ secrets.ARM_ACCESS_KEY }}"
        working-directory: ${{ github.workspace }}

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ${{ github.workspace }}
        continue-on-error: true

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ github.workspace }}

      - name: Terraform Plan
        run: terraform plan -input=false -out="terraform.tfplan"
        working-directory: ${{ github.workspace }}

      - name: Apply Terraform
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false terraform.tfplan
        working-directory: ${{ github.workspace }}
